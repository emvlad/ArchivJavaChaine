package ServerWebClient;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class LiaisonClient {
	
	Socket transmitter = null; //attribuer la voie des transferts du client-server
	BufferedReader entree = null; // attribuer le débit d'entrée des transferts
	PrintWriter pub = null; // attribuer le débit de sortie des transferts
	
	
	/**
	 * Construire un objet qui représente une connexion du client à
	 * partir d'une socket d'échange.
	 * Il initialise le débit d'entrée transmis.
	 */
	LiaisonClient(Socket transmitter) {
		
		this.transmitter = transmitter;
		
		try {
			
			//créer le stockage des transferts reçus
			entree = new BufferedReader(new InputStreamReader(this.transmitter.getInputStream()));
		} catch (IOException e) {

			e.printStackTrace();
		}
		
	}
	
	/**
	 * Lire la requête HTTP se trouvant dans le débit d'entrée de
	 * du transmetteur et l'affiche à la console
	 */
	
	void getHeader() {
		
		String crypt = null;
		
		try {
			// lire les lignes de l'entête http		
			while ((crypt = entree.readLine()).compareTo("") != 0) {
				System.out.println("Accept: " + crypt);

			}

		} catch (IOException e) {
			e.printStackTrace();
		}

	}
	
	/* Réponse du serveur au client en format HTTP*/

	void echoServer() {

		// préparer le corps de la réponse
		String reply = "";
		reply += "<html>";
		reply += "<body>";
		reply += "<p>";
		reply += "Welcome to TP2 Final";
		reply += "</p>";
		reply += "</body>";
		reply += "</html>";

		// retrouver la longueur du corps de la réponse
		int len = reply.length();

		// écrire les entêtes
		pub.print("HTTP-1.0 200 OK\r\n");
		pub.print("Content-Length: " + len + "\r\n");
		pub.print("Content-Type: text/html\r\n\r\n"); // placer la ligne vide
		
		// passer la réponse
		pub.print(reply);
		
		//alignement
		pub.flush();

	}
	
	/**
	 * Fermer le débit des transferts
	 */
	void closeDebit() {
		try {
			entree.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}
